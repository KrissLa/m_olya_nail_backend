"""
Django settings for olya_nail project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = str(os.getenv("SECRET_KEY"))
HOST = str(os.getenv("HOST"))
IP_ADDRESS = str(os.getenv("IP_ADDRESS"))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = [IP_ADDRESS, 'localhost', '127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'drf_yasg',

    'django_filters',

    'users',
    'instagram',
    'questions',
    'services',
    'available_dates',
    'orders',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'olya_nail.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'olya_nail.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': str(os.getenv("DB_NAME")),
        'USER': str(os.getenv("PG_USER")),
        'PASSWORD': str(os.getenv("PG_PASSWORD")),
        'HOST': str(os.getenv("DB_HOST")),
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Minsk'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_DIR = os.path.join(BASE_DIR, 'static')
# STATICFILES_DIRS = [STATIC_ROOT]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    # ]
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=365),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

# DJOSER = {
#     'PASSWORD_RESET_CONFIRM_URL': '#/password/reset/confirm/{uid}/{token}',
#     'USERNAME_RESET_CONFIRM_URL': '#/username/reset/confirm/{uid}/{token}',
#     'ACTIVATION_URL': '#/activate/{uid}/{token}',
#     'SEND_ACTIVATION_EMAIL': False,
#     'SERIALIZERS': {},
# }

REFERRAL_BONUS = int(os.getenv("REFERRAL_BONUS"))   # Бонус при регистрации по реф ссылке
REFERRAL_FIXED_BONUS = int(os.getenv("REFERRAL_FIXED_BONUS"))  # Бонус за определенное кол-во заказов рефералов
FREE_BONUS = int(os.getenv("FREE_BONUS"))   # Бонус при регистрации без реф ссылки
FREE_CODE = str(os.getenv("FREE_CODE"))   #
FIRST_BONUS = str(os.getenv("FIRST_BONUS"))   # Бонус за первый заказ приглашенного пользователя

PERSONAL_CASHBACK_LEVEL = {
    1: {
        'value': 1.5,
        'min_order_quantity': 0,
        'max_order_quantity': 1
    },
    2: {
        'value': 1.6,
        'min_order_quantity': 1,
        'max_order_quantity': 5
    },
    3: {
        'value': 1.7,
        'min_order_quantity': 5,
        'max_order_quantity': 10
    },
    4: {
        'value': 1.8,
        'min_order_quantity': 10,
        'max_order_quantity': 15
    },
    5: {
        'value': 1.9,
        'min_order_quantity': 15,
        'max_order_quantity': 20
    },
    6: {
        'value': 2,
        'min_order_quantity': 20,
        'max_order_quantity': 30
    },
    7: {
        'value': 2.1,
        'min_order_quantity': 30,
        'max_order_quantity': 40
    },
    8: {
        'value': 3,
        'min_order_quantity': 40,
        'max_order_quantity': 50
    },
    9: {
        'value': 4,
        'min_order_quantity': 50,
        'max_order_quantity': 100
    },
    10: {
        'value': 5,
        'min_order_quantity': 100,
        'max_order_quantity': 9999999
    },
}  # Уровни персонального кэшбэка и значения

REFERRAL_CASHBACK_LEVEL = {
    0: {
        'value': 0,
        'min_order_quantity': 0,
        'max_order_quantity': 1
    },
    1: {
        'value': 1,
        'min_order_quantity': 1,
        'max_order_quantity': 5
    },
    2: {
        'value': 1.1,
        'min_order_quantity': 5,
        'max_order_quantity': 10
    },
    3: {
        'value': 1.2,
        'min_order_quantity': 10,
        'max_order_quantity': 20
    },
    4: {
        'value': 1.3,
        'min_order_quantity': 20,
        'max_order_quantity': 30
    },
    5: {
        'value': 1.5,
        'min_order_quantity': 30,
        'max_order_quantity': 40
    },
    6: {
        'value': 2,
        'min_order_quantity': 40,
        'max_order_quantity': 60
    },
    7: {
        'value': 2.5,
        'min_order_quantity': 60,
        'max_order_quantity': 70
    },
    8: {
        'value': 3,
        'min_order_quantity': 70,
        'max_order_quantity': 100
    },
    9: {
        'value': 4,
        'min_order_quantity': 100,
        'max_order_quantity': 500
    },
    10: {
        'value': 5,
        'min_order_quantity': 500,
        'max_order_quantity': 999999999999
    },
}  # Уровни реферального кэшбэка и значения




